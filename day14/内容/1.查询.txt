1.select * from 表名
	select * from student where del=0
	select name,id from student where del=0
2.取别名
	select name as '名字' from student s where s.del=0
	何时对表取别名
		当多表查询的时候
	不加as也可以取别名，用空格代替as

3.where用法
	1.比较运算符
		select * from student where name = '亚索';
		select * from grade where score>60;
		select * from grade where score>=60;
	2.where 关键字
		1.bettween and   在某个范围内
			#查询分数为60 到 80分的学生
			select * from grade where score BETWEEN 60 and 80;
		2.in 在 限定的集合中搜索
			# in 参数的个数是有上限的，上线应该是不到2000
			select * from grade where score in (60,70,80,90,50);
	3.like 模糊搜索
		% 是通配符
		
		#查询讲师里姓游 
		select * from teacher where name like '游%';
		#查询名字叫司马
		select * from teacher where name like '%司马';
		#查询名字包含 文
		select * from teacher where name like '%文智%';
	4.空值
		is null,is not null
		select * from teacher where delete_time is not null
	5.or,and,not
		#查询被删除的学生，并且名字叫永恩
		select * from student where del = 1 and  name ='永恩'
4.升序 降序
	asc desc
	#分数从高到低
	select * from grade order by score desc;
	#分数从低到高
	select * from grade order by score asc;	

5.统计(聚合)函数
	#统计有多少个学生
	select count(id) as '学生人数' from student;

	#统计学生的平均分
	select avg(score) from grade;

	#查询分数最高
	select max(score) from grade;

	#查询分数最低
	select min(score) from grade;

	#统计总分
	select sum(score) from grade;
	
6.去重
	#分数去重
	select distinct score from grade 
	
	
7.聚合
	分组后在进行统计函数的使用，不是对全表进行统计，而是对分组的数据进行统计。
	比如说：
		我要统计每个分数各有几个学生
		select score,count(id) as '人数' from grade GROUP BY score
		我要统计每个学生的平均分
		select student_id,avg(score) from grade GROUP BY student_id
		统计每个学生的总分
		select student_id,sum(score) from grade group by student_id
		输出学生的平均分，总分，最高分，最低分
		#输出学生的平均分，总分，最高分，最低分
		SELECT
			student_id,
			avg( score ) '平均分',
			sum( score ) '总分',
			max( score ) '最高分',
			min( score ) '最低分',
			count( score ) '科目数'
		FROM
			grade 
		GROUP BY
			student_id;
		
		
		having：
			having就是where，having是对分组后的数据进行筛选，where是分组前
			#查询平均分大于60分的学生
			select student_id,avg(score) from grade  GROUP BY student_id having avg(score) > 60
		
		#输出学生的平均分，总分，最高分，最低分，然后按照平均分进行排序，由高到低
		SELECT
			student_id,
			avg( score ) '平均分',
			sum( score ) '总分',
			max( score ) '最高分',
			min( score ) '最低分',
			count( score ) '科目数'
		FROM
			grade 
		GROUP BY
			student_id
		ORDER BY avg( score ) desc
		
	聚合是一种思维，先分组再统计的思维。
	不论是mysql、SQL server、orcale，都是用group by，es虽然不是用group by，但是es也是有聚合这种操作的。
		
8.case when
	#显示学生的成绩，低于60分显示不急，高于60低于80 及格，高于80优秀。
	SELECT
	student_id,
	score,
	CASE
		
		WHEN score < 60 THEN '不及格' WHEN score >= 60 
		AND score <= 80 THEN
		'及格' ELSE '优秀' 
	END AS '结果' 
	FROM
	grade
	
9.limit
	#查询前三条
	select * from grade limit 3
	
	#查询 3到5条
	select * from grade limit 2,5	
	
	limit一定是写在最后面
	
10.union
	合并数据
		select id,name,del from student where name = '亚索'
		union 
		select id,name,null from student where name = '菲兹'
	合并的表数据，字段要一样多
		
		select 不一定要跟字段，也可跟函数，或者常量
		select 1
		select 1+2
		select now()
		select null
	union all 
		合并的时候不去重
		
11.exists（熟悉）
	exists表示()内子查询语句返回结果不为空说明where条件成立就会执行主sql语句， 如果为空就表示where条件不成立，
	sql语句就不会执行。not exists和exists相反， 子查询语句结果为空，则表示where条件成立，执行sql语句。否则不执行
	
	select * from teacher where exists(select id from teacher where name ='游文智1');
		查不到数据，因为没有游文智1
	select * from teacher where exists(select id from teacher where name ='游文智');
		查得到数据，因为有游文智
	
12.with（熟悉），mysql低版本没有
	sqlserver 一般配合 with 做分页，因为sqlserver的分页特别麻烦。
	WITH table1 AS ( SELECT * FROM grade WHERE score > 60 UNION SELECT * FROM grade WHERE score < 50 ) 
	SELECT
	* 
	FROM
		table1;	
	
		
		
		
		
		
		
		
		
		
		
		
		
		