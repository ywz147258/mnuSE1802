1.存储函数
	跟存储过程的区别
	1.参数没有 in out
	2.需要提前设置返回的类型
	3.有返回值

	drop function if exists test6;
	CREATE FUNCTION test6(a int,b int)
		RETURNS int
	BEGIN
		return a+b;
	END;

	select test6(1,4);

2.触发器
	trigger
	在删除某一张表的时候，把另一张的相关数据也删了
	在修改某一张表的时候，把另一张表的数据删了或者改了。
	
	create trigger student_delete_before -- (表名_操作类型_之前还是之后)
	before delete
	on student 
	for each row -- 固定写法
	begin
	
	end;
	
	
	删除 修改 添加 都可以用 before和 after
		添加的时候不能用old 因为没有旧数据
		删除的时候不能用new 因为没有新数据
		
	修改后的数据是 新 new
	修改前的数据是 旧 old

	新增前的数据是 new
	新增后的数据是 new

	删除前的数据是 旧 old
	删除之后数据是 旧 old
	
	
	-- 对某个学生的进行逻辑删除时候，把成绩表里该学生的成绩也逻辑删除。
	create trigger student_update_after
	before update 
	on student for each row
	begin
		if new.del=1 then
			update grade set del =new.del where student_id=old.id;
		end if;
	end;
	
	-- 对某个学生进行添加的时候，成绩表也添加科目1 100分
	drop TRIGGER if exists student_insert_before;
	create trigger student_insert_before
	after insert 
	on student for each row
	begin
			insert into grade(student_id,course_id,score) values(new.id,1,100);
	end;
	
	-- 对某个学生进行物理删除的时候，把成绩进行物理删除
	drop TRIGGER if exists student_delete_after;
	create trigger student_delete_after
	after delete
	on student for each row
	begin
			delete from grade where student_id=old.id;
	end;
	
总结：
	视图 存储过程 存储函数 游标 触发器
	理解就好，基本上不会用到。
	
3.事物
	可以理解为锁
	当我在执行某一段代码的时候，这段待会被锁定，其他无法使用。
	mysql的事物除了锁定数据，还可以回滚。
	
	假设你的银行卡里有100块
	然后你去银行取钱，一次去50，理论上是不是只能取两次。
	
	你取第一次 50，银行卡剩50
	另外一个人也 取50，银行卡没钱0，说你再取就取不了钱。
	
	但是有可能是两个人同时取，数据库虽然剩50，但是会给100，所以数据库剩-50;
	数据库发现剩-50，那就回滚，把数据还原到50的状态。
	
	事物总结：
		锁定数据，不让多人同时操作。
		回滚数据，把数据还原到初始状态。
		正常的银行存取款流程不止一张表，通常这种操作会涉及到几十张表，几十张表手动还原基本不可能，只能批量的还原（回滚）
		回滚可以理解为，在操作数据前进行数据的备份，一旦发现问题，就把数据还原。
	

		
	
	
	
	