1、查询001课程比002课程成绩高的所有学生的学号；
	
2、查询平均成绩大于60分的同学的学号和平均成绩；
	SELECT
		student_id,
		avg( score ) AS '平均分' 
	FROM
		grade 
	GROUP BY
		student_id;
3、查询所有同学的学号、姓名、选课数、总成绩；
	-- 先统计考过试的学生,得出学生考过的科目数
	-- 再统计考过试的学生,得出学生的总分
	-- 再把以上的两个结果进行关联，就能得出 学生选修了几门,总分
	-- 最后在以student为主表，把没参加过考试的学生也显示出来.
	-- 以下写法的前提是 一个学生一门课程可以考多次
	select 
		s.id as '学号',
		s.name as '姓名',
		b.counts as '选课数',
		c.sums as '总成绩'
		from
		student s left join 
		(
			select s.id as sid,
			s.name,
			count(1) as counts
			from student s inner join (	
					SELECT
						s.id
					FROM
						student s
						inner JOIN grade g ON s.id = g.student_id
					GROUP BY s.id,g.course_id
			) a on s.id= a.id
			group by s.id	
		) b on s.id=b.sid
		left join (
			select sum(score) as sums,student_id as sid from grade group by student_id
		) c on b.sid=c.sid
		
	-- grade 一个学生一门课程只能考一次
	SELECT
		s.id as '学号',
		s.NAME '姓名',
		case when sum( g.score ) is null
		then '0'
		else count( 1 ) end
		as  '选课数',
		sum( g.score ) '总成绩'
	FROM
		student s
		LEFT JOIN grade g ON s.id = g.student_id 
	GROUP BY
		s.id;

4、查询姓“李”的老师的个数；
	selec count(1) from teacher where name like ='李%'

5、查询没学过“叶平”老师课的同学的学号、姓名；
	select  s.name,s.id from grade g,student s where g.course_id not in(
		select c.id from course c,teacher t where c.teacher_id=t.id and t.name='游文智'
	) and s.id=g.student_id
	group by s.id


6、查询学过“001并且也学过编号002”课程的同学的学号、姓名；

7、查询学过“叶平”老师所教的所有课的同学的学号、姓名；

8、查询课程编号001的成绩比课程编号002课程低的所有同学的学号、姓名；

9、查询所有课程成绩小于80分的同学的学号、姓名；

10、查询没有学全所有课的同学的学号、姓名；

11、查询至少有一门课与学号为1001的同学所学相同的同学的学号和姓名;

12、查询至少学过学号为1001同学所有课的其他同学学号和姓名;

13.把sc表中叶平老师教的课程的成绩都改为此课程的平均成绩

14.查询和学号为1002同学学习的课程完全相同的其他同学学号和姓名；
写法和 7 12 一样

15、删除学习“王老师”老师课的SC表记录;

17、按平均成绩从高到低显示所有学生的“数据库”、“企业管理”、“英语”三门的课程成绩，按如下形式显示：学生ID,,数据库,企业管理,英语,有效课程数,有效平均分；

18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分；

19、按各科平均成绩从低到高和及格率的百分数从高到低顺序；

20、查询如下课程平均成绩和及格率的百分数: 企业管理（C#为001）平均分，企业管理及格百分数，马克思平（C#为002）均分，马克思及格百分数，UML（C#为003）平均分，UML及格百分数，数据库平均分（C#为004），数据库及格百分数



