以下的练习均用  inner join

1.输出学生的成绩、科目、考试次数、平均分、总分 按平均分排序
	科目和学生是独立开的，比如说 A学生考英语考了两次，考数学考了一次，英语和数学的平均分是分开计算的

	select s.name,g.score,c.name,count(1) as '考试次数',avg(g.score) as '平均分',sum(g.score) as '总分'
	from  student s,grade g,course c where s.id=g.student_id
	and c.id=g.course_id
	group by s.id,c.id
	order by avg(g.score) desc

	select s.name,g.score,c.name,count(1) as '考试次数',avg(g.score) as '平均分',sum(g.score) as '总分'
	from  student s inner join grade g on  s.id=g.student_id
	inner join course c on c.id=g.course_id
	group by s.id,c.id
	order by avg(g.score) desc


2.输出游文智教的学生里，平均分最高的学生前10名，显示 学生名字，平均分
	比如说 A学生考英语考了两次，考数学考了一次，平均分是 英语和数学的成绩加在一起平均
	select s.name,c.name,avg(g.score) as '平均分',t.name from 
	student s inner join grade  g on s.id=g.student_id
	inner join course c on c.id= g.course_id
	inner join teacher t on t.id= c.teacher_id
	where t.name='游文智'
	group by s.id
	order by avg(g.score) desc
	limit 10
	
3.输出数学成绩里平均分最高的学生前10名，显示学生名字，按平均分排序
	select  s.name,avg(g.score) from student s
	inner join grade g on s.id=g.student_id
	inner join course c on c.id= g.course_id
	where c.name='英语'
	GROUP BY s.id


以下练习用 inner join 和 left join
4.输出所有学生和所有科目的成绩。
	如果有的学生没有成绩，则成绩显示无
	如果有的科目没有学生，学生姓名显示无
	要求输出的字段为 学生姓名，学科名称，成绩
	SELECT
		s.NAME as '学生姓名',
		c.NAME as '科目名称',
		g.score as '成绩'
	FROM
		student s
		LEFT JOIN grade g ON s.id = g.student_id
		LEFT JOIN course c ON c.id = g.course_id
	UNION
	SELECT
		s.NAME as '学生姓名',
		c.NAME as '科目名称',
		g.score as '成绩'
	FROM
		student s
		LEFT JOIN grade g ON s.id = g.student_id
		right JOIN course c ON c.id = g.course_id	
	
	
5.输出 所有学生和所有科目的成绩，要求显示 分数大于60分，如果有成绩却找不到对应科目，则不显示该数据。
	显示字段 学生姓名，学科名称，成绩

	select s.name,g.score from student s left join grade g on s.id=g.student_id
	left join course c on c.id=g.course_id
	where g.score>60	
	

6.输出选修过游文智和周杰伦老师课程的学生
科目平均分必须是大于60分，如果只有成绩没有学生，则学生姓名显示无。
	显示字段 教师姓名，学生姓名，科目名称，平均分
	select s.name,c.name,avg(g.score) from course c inner join teacher t on c.teacher_id=t.id
	left join grade g on g.course_id=c.id
	left join student s on s.id=g.student_id
	where t.name in  ("游文智","周杰伦")
	group by s.id,c.id
	having avg(g.score)>60
	
	
	