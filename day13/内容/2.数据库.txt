1.常用的数据库
	mysql sqlserver oracle 
	关系型数据库
	通俗的解释就可以连表查询
	A表跟B有关系，B表跟C表又有关系
	A-B-C
	案例 人员信息管理
		人员（Person）				姓名  身份证 年龄 
		人员信息（PersonProperty）	学历 	血型 地址 
		学校信息表					学校地址 学校的很多信息
		有一个需求：
			我要知道某个人的学校地址
			所以叫关系型数据库（通过一张表就能关联另一张表，从而获取我们要的数据）
			
	
2.非关系型
	mongodb，elasticsearch 
	人员（Person）  姓名  身份证 年龄  学历 	血型 地址  学校地址 学校的很多信息
	非关系型数据库查询非常快，但是写入、修改、删除很慢
		10E条数据，对于非关系型来说，查询只需要几毫秒
		对于关系型数据库来讲，只要超过100W条，查询的数据就非常慢，可能要十几秒
		因为人家从头都只操作一张表
	非关系型数据能代替关系型吗？
		不行!因为关系型数据库很灵活（可以连表）


3.数据库的操作语法
DDL(不需要掌握，只需要熟悉)
	定义数据库的结构，包括表的结构
	我们建表建库通常不用代码，用的是可视化工具（navicate）
	如果没有可视化工具的情况下，我们只能用dos界面来进行数据的操作
	创建数据库
		create database mnu2 default charset utf8mb4;
	查看所有表,所有库
		show databases;
		use mnu2;
		showtables;
	删除数据库
		drop database 数据库名字；
	
	创建表
		create table project(
			id int PRIMARY key  AUTO_INCREMENT,
			name varchar(255) not null COMMENT '名字',
		)  COMMENT='学生表';
	查看表结构
		desc 表名;
		
	复制表	
	create table student2 like student;
	create table studetn3 as select * from student;
	
	删除表
	drop table 表名;
	

	有些时候是没有可视化工具可以使用的，所以还得知道一些ddl的用法。

	
DML(我们重点要掌握)
	增删改查
	
DCL(知道就行，连熟悉都不用)
	类似linux的权限操作


4.建表冷知识
	为什么有的字段明明是中文，却用int
		存字符串占用空间大，还是存int占用空间大，很明显是 字符串空间大
		设计表的原则之一，就是尽量用小的空间存最大的数据，这时候数据字典（枚举）的使用就特别的重要
	不论什么表，第一个字段一定是id,类型int，设为主键，并且自动增长


5.完整性的理解
	对于表来讲，完整性并非全面，强大。
	完整性是指表的逻辑自洽性。
	再通俗的讲，就是你的表不能有漏洞。



		











